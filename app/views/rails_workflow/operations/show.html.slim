ruby:
  child_process = @operation.child_process

ol.breadcrumb.alert-warning
  li
    = link_to "Procesos", processes_path
  li
    = link_to "Proceso: #{@operation.process.title}", @operation.process
  li.active
    = "Operation: #{@operation.title} "

= render partial: "application/flash", locals: { notice: notice }

.row
  .col-md-10
    .panel
      .panel-heading
        h1.panel-title
          = "Operación: #{@operation.title} "
          span.label.more-info-label class=(@operation.status[:class])
            = @operation.status[:text]
      .panel-body
        .col-md-6
          table.table.table-striped.table-hover
            tbody

              tr
                td Fecha de creación
                td = @operation.created_at

              tr
                td Fecha de finalización
                td = @operation.completed_at

              - if @operation.assigned_to.present?
                tr
                  td Asignado a
                  td = @operation.assigned_to
              tr
                td Template de operación
                td = link_to @operation.template.title,
                             process_template_operation_template_path(@operation.template.process_template,
                                                                      @operation.template)

              - if child_process.present?
                tr
                  td Procesos hijos
                  td
                    = link_to child_process
                      = child_process.title
                    span.label<> class=(child_process.status[:class])
                      = child_process.status[:text]
              tr
                td Asíncrono
                td = @operation.async

              tr
                td Segundo plano
                td = @operation.is_background


        .col-md-6

          - if @operation.show_dependencies.empty?
            .col-md-12
              strong
                | Sin dependencias
          - else
            table.table.table-striped.table-hover
              tbody
                tr
                  td
                    strong Dependencias
                - @operation.show_dependencies.each do |dependency|
                  tr
                    td
                      = link_to process_operation_path(dependency.process, dependency)
                        = dependency.title

                      span.label<> class=(dependency.status[:class])
                        = dependency.status[:text]

                tr
                  td
                    strong Template Dependencies
                - @operation.show_template_dependencies.each do |dependency|
                  tr
                    td
                      = dependency.shift
                      - dependency.each do |dependency_status|
                        span.label.label-default<> = dependency_status


  .col-md-2
    .pull-right
      .btn-toolbar
        ul.nav.nav-pills
          li role="presentation" class="active"
            = link_to "Regresar a los procesos", process_path(@operation.process)


.row
  .col-md-10
    .panel
      .panel-heading
        h1.panel-title Contexto de operación
      .panel-body
        = render @operation.context.partial_name, { context: @operation.context }

- if @operation.workflow_errors.unresolved.present?
  - @operation.workflow_errors.unresolved.each do |error|
    .row
      .col-md-10
        .panel
          .panel-heading
            h1.panel-title Error
          .panel-body
            table.table.table-striped.table-hover
              tbody
                tr
                  td width="100"
                    strong Fecha de creación
                  td
                    .pull-right
                      = button_to "Reintentar", retry_process_operation_error_path(@operation.process, @operation, error), class: "btn btn-warning", method: :put
                    = error.created_at
                tr
                  td
                  td
                    strong= error.message
                    br
                    = error.stack_trace
